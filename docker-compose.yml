version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network  # Connect to custom network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    networks:
      - app_network  # Connect to custom network

  data_provider:
    build:
      context: ./data_provider
    container_name: data_provider
    command: ["gunicorn", "data_provider.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120"]
    volumes:
      - ./data_provider:/app
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      CELERY_BROKER_URL: redis://redis:6379/0
      DEBUG: True
    depends_on:
      - postgres
      - redis
    networks:
      - app_network  # Connect to custom network

  dashboard_service:
    build:
      context: ./dashboard_service
    container_name: dashboard_service
    command: ["gunicorn", "dashboard_service.wsgi:application", "--bind", "0.0.0.0:8001", "--workers", "3", "--timeout", "120"]
    volumes:
      - ./dashboard_service:/app
    ports:
      - "8001:8001"
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      DATA_PROVIDER_URL: http://172.18.0.4:8000  # Use service name for internal communication
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - data_provider
    networks:
      - app_network  # Connect to custom network

  celery_worker:
    build:
      context: ./dashboard_service
    container_name: celery_worker
    command: ["celery", "-A", "dashboard_service", "worker", "-B", "--loglevel=info"]
    volumes:
      - ./dashboard_service:/app
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      DATA_PROVIDER_URL: http://172.18.0.4:8000  # Use service name for internal communication
      CELERY_BROKER_URL: redis://redis:6379/0
    depends_on:
      - postgres
      - redis
      - data_provider
    networks:
      - app_network  # Connect to custom network

volumes:
  postgres_data:

networks:
  app_network:  # Define custom network
    driver: bridge  # Use the default bridge driver
